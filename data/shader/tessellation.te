/**
 * Copyright 2013 Marc Ro√übach
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#version 400
layout(triangles, equal_spacing, ccw) in;
in vec2 tcTexCoord[];
out vec2 teTexCoord;

uniform sampler2D jvr_Texture0;
uniform float offset;

void main()
{
	vec4 pos = vec4(gl_in[0].gl_Position.xyz * gl_TessCoord.x + 
                    gl_in[1].gl_Position.xyz * gl_TessCoord.y + 
                    gl_in[2].gl_Position.xyz * gl_TessCoord.z, 1.0);
                    
    vec3 normal = normalize(cross(gl_in[0].gl_Position.xyz - gl_in[1].gl_Position.xyz, 
    							  gl_in[0].gl_Position.xyz - gl_in[2].gl_Position.xyz));
                   
    vec2 texCoord = tcTexCoord[0] * gl_TessCoord.x + 
               		tcTexCoord[1] * gl_TessCoord.y + 
               		tcTexCoord[2] * gl_TessCoord.z;
               		
    teTexCoord = texCoord;
    
    pos.xyz += texture2D(jvr_Texture0, texCoord).r * normal * offset;

	gl_Position = pos;
}